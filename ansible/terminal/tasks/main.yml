---

# ---------------------------------------------------------------------
# bashrc

- name: Ensure that custom .bashrc is in the home folder
  ansible.builtin.copy:
      src: .bashrc
      dest: "{{ bashrc }}"

- name: Ensure that DOTFILES is exported in .bashrc
  ansible.builtin.lineinfile:
      path: "{{ bashrc }}"
      regexp: "^export DOTFILES"
      line: export DOTFILES="$HOME/.config/dotfiles"

# ---------------------------------------------------------------------
# gitconfig

- name: Ensure that custom .gitconfig is in the home folder
  ansible.builtin.copy:
      src: .gitconfig
      dest: "{{ gitconfig }}"

# ---------------------------------------------------------------------
# inputrc

- name: Ensure that custom .inputrc is in our dotfiles folder
  ansible.builtin.copy:
      src: .inputrc
      dest: "{{ dotfiles }}/.inputrc"

- name: Ensure that INPUTRC is exported in .bashrc
  ansible.builtin.lineinfile:
      path: "{{ bashrc }}"
      regexp: "^export INPUTRC"
      line: export INPUTRC="$DOTFILES/.inputrc"

# ---------------------------------------------------------------------
# note-taking stuff

- name: Ensure notes.sh is in .config/dotfiles
  ansible.builtin.copy:
      src: notes.sh
      dest: "{{ dotfiles }}/scripts/notes.sh"

- name: Ensure notes.sh can be executed by current user
  ansible.builtin.file:
      path: "{{ dotfiles }}/scripts/notes.sh"
      mode: u=rwx,g=r,o=r

- name: Ensure preview.sh is in .config/dotfiles
  ansible.builtin.copy:
      src: preview.sh
      dest: "{{ dotfiles }}/scripts/preview.sh"

- name: Ensure preview.sh can be executed by current user
  ansible.builtin.file:
      path: "{{ dotfiles }}/scripts/preview.sh"
      mode: u=rwx,g=r,o=r

- name: Ensure that note-taking alias is present in .bashrc
  ansible.builtin.lineinfile:
      path: "{{ bashrc }}"
      regexp: "^alias nv"
      line: alias nv='$DOTFILES/scripts/notes.sh'

# ---------------------------------------------------------------------
# more note-taking stuff (web page citations)

- name: Ensure cite.py is in .config/dotfiles
  ansible.builtin.copy:
      src: cite.py
      dest: "{{ dotfiles }}/scripts/cite.py"

- name: Ensure cite.py can be executed by current user
  ansible.builtin.file:
      path: "{{ dotfiles }}/scripts/cite.py"
      mode: u=rwx,g=r,o=r

- name: Ensure that citation alias is present in .bashrc
  ansible.builtin.lineinfile:
      path: "{{ bashrc }}"
      regexp: "^alias cite"
      line: alias cite='python3 $DOTFILES/scripts/cite.py'

# ---------------------------------------------------------------------
# games script

- name: Ensure games.sh is in .config/dotfiles
  ansible.builtin.copy:
      src: games.sh
      dest: "{{ dotfiles }}/scripts/games.sh"

- name: Ensure games.sh can be executed by current user
  ansible.builtin.file:
      path: "{{ dotfiles }}/scripts/games.sh"
      mode: u=rwx,g=r,o=r

- name: Ensure that alias for launching games is present in .bashrc
  ansible.builtin.lineinfile:
      path: "{{ bashrc }}"
      regexp: "^alias games"
      line: alias games='$DOTFILES/scripts/games.sh'

# ---------------------------------------------------------------------
# putting cheatsheets in common folder

- name: Ensure cheatsheets are in .config/dotfiles
  ansible.builtin.copy:
      src: cheatsheets/
      dest: "{{ dotfiles }}/cheatsheets/"

# ---------------------------------------------------------------------
# install nvm (for managing node versions)

- name: Ensure that nvm v0.38.0 is installed
  ansible.builtin.shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
  args:
      creates: "{{ lookup('env', 'HOME') }}/.nvm/nvm.sh"

# ---------------------------------------------------------------------
# install exa (can be used as a replacement to ls)

- name: Get the current stat of the exa binary
  ansible.builtin.stat:
      path: "{{ local_bin }}/exa"
  register: exa_binary

- name: Download exa v0.10.0
  ansible.builtin.get_url:
      url: https://github.com/ogham/exa/releases/download/v0.10.0/exa-linux-x86_64-v0.10.0.zip
      dest: /tmp/exa.zip
      checksum: "sha256:25780ed5b4beb71295770baaa464759f60765b8246347694eeecebd0bc319e1c"
  when: >
    exa_binary.stat.exists == false

- name: Ensure that the .config/dotfiles directory exists
  ansible.builtin.file:
      path: /tmp/exa
      state: directory
  when: >
    exa_binary.stat.exists == false

- name: Extract the exa zip
  unarchive:
      src: /tmp/exa.zip
      dest: /tmp/exa
  when: >
    exa_binary.stat.exists == false

- name: Ensure that the exa binary is in the local bin
  ansible.builtin.copy:
      src: /tmp/exa/bin/exa
      dest: "{{ local_bin }}/exa"
  when: >
    exa_binary.stat.exists == false

- name: Ensure that the exa binary can be executed by current user
  ansible.builtin.file:
      path: "{{ local_bin }}/exa"
      mode: u=rx,go-rwx