

# todo: setup toolboxes?


# =====================================================================
# Layered packages
#
# These should be used sparingly to install stuff that needs to be
# available system-wide and can't be used via toolboxes or Flatpak.

packages_to_layer:
  - mozilla-ublock-origin
  - neovim

# packages_to_remove:
#   - your_packages_here

# =====================================================================
# Flatpaks
#
# All apps installed on the machine should come from here so that they
# can easily be installed into your home dir and have their updates
# managed by the OS.
#
# Helpful doco for overrides:
# https://docs.flatpak.org/en/latest/sandbox-permissions.html
# https://www.mankier.com/1/flatpak-override

flatpak_remotes:
  - name: flathub
    url: https://dl.flathub.org/repo/flathub.flatpakrepo

  - name: flathub-beta
    url: https://flathub.org/beta-repo/flathub-beta.flatpakrepo

flatpak_apps_to_install:
  # for  controlling permissions on all of the Flatpaks that I
  # install onto my system. The permissions can also be 'set into
  # stone' here by writing them as overrides.
  - remote: flathub
    package: com.github.tchx84.Flatseal

  # A web browser that isn't installed at the system-level, and
  # has some sandboxing to prevent it from having access to all
  # of my stuff.
  - remote: flathub
    package: com.brave.Browser
    commands: [brave]
    overrides:
      # remove some default filesystem access permissions
      - { scope: user, setting: "--nofilesystem=host-etc" }
      - { scope: user, setting: "--nofilesystem=xdg-music" }
      - { scope: user, setting: "--nofilesystem=xdg-videos" }
      - { scope: user, setting: "--nofilesystem=xdg-desktop" }
      # whitelist ~/Documents read-only
      - { scope: user, setting: "--filesystem=xdg-documents:ro" }
      - { scope: user, setting: "--filesystem=home/.local/share/applications:create" }
      - { scope: user, setting: "--filesystem=home/.local/share/icons:create" }

  # for managing GNOME extensions easily
  - remote: flathub
    package: com.mattjakeman.ExtensionManager

  # for opening encrypted vaults
  - remote: flathub
    package: org.cryptomator.Cryptomator
    commands: [cryptomator]

  # for opening KeePass databases (e.g. so that I can open my
  # encrypted vaults...)
  - remote: flathub
    package: org.keepassxc.KeePassXC

  # so that I can listen to music without having to download it
  - remote: flathub
    package: com.spotify.Client

  # flashcards; they help me remember things
  # AnkiConnect addon: https://ankiweb.net/shared/info/2055492159
  - remote: flathub
    package: net.ankiweb.Anki
    commands: [anki]

  # for quickly spinning up VMs
  - remote: flathub
    package: org.gnome.Boxes

  # for managing my eBooks library
  - remote: flathub
    package: com.calibre_ebook.calibre

  # for reading eBooks
  - remote: flathub
    package: com.github.johnfactotum.Foliate

  # watching youtube videos and keeping track of youtube
  # subscriptions without having to sign in
  - remote: flathub
    package: io.freetubeapp.FreeTube

  # watch videos on Jellyfin via mpv (instead of having
  # to use the web client)
  - remote: flathub
    package: com.github.iwalton3.jellyfin-mpv-shim

  # best video player!
  - remote: flathub
    package: io.mpv.Mpv
    commands: [mpv]

  - remote: flathub
    package: com.mojang.Minecraft

  # for managing my notes
#  - remote: flathub
#    package: md.obsidian.Obsidian

  # for remote desktop connections; I prefer this to the built-in
  # GNOME app org.gnome.Connections
  - remote: flathub
    package: org.remmina.Remmina

  # for opening up and looking at repositories
  - remote: flathub
    package: com.vscodium.codium
    commands: [codium, code]

  - remote: flathub
    package: org.onlyoffice.desktopeditors

# todo: figure out how to install these apps:
#  google chrome
#  steam
#  vscode

flatpak_apps_to_remove:
  - remote: fedora
    package: org.gnome.Maps

  - remote: fedora
    package: org.gnome.Connections

  - remote: fedora
    package: org.gnome.Contacts

  - remote: fedora
    package: org.gnome.Calendar

# =====================================================================
# Standalone Applications
#
# These are applications that can't be found as Flatpaks (or are
# difficult to install as Flatpaks).
#
# Each application is fully contained in one file (realistically, this
# means that the applications are all 'AppImage' files).

standalone_applications:
  - url: https://github.com/nextcloud/desktop/releases/download/v3.2.4/Nextcloud-3.2.4-x86_64.AppImage
    checksum: sha256:5d0c13ba422c445c4a88cd45a1b38878daf67123552b0f4a6020a73734c47ce6
    file_name: Nextcloud.AppImage
  - url: https://raw.githubusercontent.com/xwmx/nb/6.10.0/nb
    checksum: sha256:6840973acf6a678e16793089acb953f697562eaffc6082bc7796adc8d41bac1b
    file_name: nb
    location: "{{ lookup('env', 'HOME') }}/.local/bin"

# find appropriate version here: https://github.com/marcosnils/bin/releases
bin_base_version: "0.13.1"
cli_apps:
  - binary: exa
    namespace: "github.com/ogham/exa"
  - binary: rg
    namespace: "github.com/burntsushi/ripgrep"
  - binary: sysz
    namespace: "github.com/joehillen/sysz"
  - binary: ghq
    namespace: "github.com/x-motemen/ghq"
  - binary: bat
    namespace: "github.com/sharkdp/bat"
  - binary: delta
    namespace: "github.com/dandavison/delta"
  - binary: sk
    namespace: "github.com/lotabout/skim"
  - binary: shellcheck
    namespace: "github.com/koalaman/shellcheck"

pipx_apps:
  - name: poetry
  - name: ranger-fm
  - name: yt-dlp
#  - name: ptpython
#    dependencies:
#      - requests
#      - pendulum

# =====================================================================
# GNOME config
#
# https://opensource.com/article/18/5/manage-your-workstation-ansible-part-3
#
# Use `dconf dump /` to see all of your GNOME config. You could even
# do something like:
#
#  dconf dump / > before.txt
#  dconf dump / > after.txt
#  diff --unified --color before.txt after.txt
#
# if you're not sure what changes you want to do (you would make the
# changes manually and see what is different in the `dconf` output
# before and after)

dconf_settings:
  # the apps that appear in the dock when you press the 'super' key
  - key: /org/gnome/shell/favorite-apps
    value: "['com.brave.Browser.desktop', 'com.spotify.Client.desktop', 'org.keepassxc.KeePassXC.desktop', 'org.cryptomator.Cryptomator.desktop', 'org.gnome.Terminal.desktop', 'com.vscodium.codium.desktop', 'org.gnome.Nautilus.desktop', 'net.ankiweb.Anki.desktop']"

# =====================================================================
# OS updates
#
# https://github.com/j1mc/ansible-silverblue
#
# Manage the rpm-ostreed.conf settings; this is where I configure the
# automatic staging of updates, because I want the system to
# automatically check for updates AND stage them in the background. The
# changes should then be picked up the next time I reboot my machine.
#
# See `man rpm-ostreed.conf` for more info

update_policy: stage
idle_timeout: '60'
