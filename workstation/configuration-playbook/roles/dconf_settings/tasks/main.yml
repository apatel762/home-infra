---

# ==============================
# CUSTOM WALLPAPER & LOCK SCREEN

- name: Ensure that wallpapers directory exists
  ansible.builtin.file:
    path: "{{ wallpaper_directory }}"
    state: directory

- name: Ensure that the custom wallpapers are in the wallpapers folder
  ansible.builtin.copy:
    src: "{{ item.file }}"
    dest: "{{ wallpaper_directory }}/{{ item.file }}"
  loop:
    - file: "{{ wallpaper_light_file_name }}"
    - file: "{{ wallpaper_dark_file_name }}"
  loop_control:
    label: "{{ item.file }}"

- name: Ensure that dconf has registered the custom DARK theme wallpaper
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  loop:
    # dark theme
    - key: "/org/gnome/desktop/background/picture-uri-dark"
      value: "'file://{{ wallpaper_directory }}/{{ wallpaper_dark_file_name }}'"
    - key: "/org/gnome/desktop/screensaver/picture-uri-dark"
      value: "'file://{{ wallpaper_directory }}/{{ wallpaper_dark_file_name }}'"
    # light theme
    - key: "/org/gnome/desktop/background/picture-uri"
      value: "'file://{{ wallpaper_directory }}/{{ wallpaper_light_file_name }}'"
    - key: "/org/gnome/desktop/screensaver/picture-uri"
      value: "'file://{{ wallpaper_directory }}/{{ wallpaper_light_file_name }}'"
  loop_control:
    label: "{{ item.key }}"

# ===========================
# OTHER CUSTOM dconf SETTINGS

- name: Ensure that other custom dconf changes are applied
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
    state: present # should this be configurable?
  loop: "{{ dconf_settings }}"
  loop_control:
    label: "{{ item.key }}"

# =============================================
# USER PROFILE PICTURE
# not really a dconf setting but fits in here

- name: Gather information about profile picture
  ansible.builtin.stat:
    path: "/var/lib/AccountsService/icons/{{ ansible_user_id }}"
  register: profile_picture

- name: Copy profile picture if not present
  become: true
  ansible.builtin.copy:
    src: "{{ user_icon_file_name }}"
    dest: "/var/lib/AccountsService/icons/{{ ansible_user_id }}"
    force: yes
  when: profile_picture.stat.checksum != user_icon_sha1

- name: set profile picture
  become: true
  lineinfile:
    path: "/var/lib/AccountsService/users/{{ ansible_user_id }}"
    regexp: '^Icon='
    line: "Icon=/var/lib/AccountsService/icons/{{ ansible_user_id }}"