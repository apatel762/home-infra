---

- name: Ensure that all required Flatpak remotes are present
  community.general.flatpak_remote:
    name: "{{ item.name }}"
    state: present
    method: user
    flatpakrepo_url: "{{ item.url }}"
  loop: "{{ flatpak_remotes }}"
  loop_control:
    label: "{{ item.name }}"

- name: Ensure that all unwanted Flatpak apps are absent
  community.general.flatpak:
    remote: "{{ item.remote }}"
    name: "{{ item.package }}"
    state: absent
  loop: "{{ flatpak_apps_to_remove }}"
  loop_control:
    label: "{{ item.package }}"

- name: Ensure that all required Flatpak apps are present
  community.general.flatpak:
    remote: "{{ item.remote }}"
    name: "{{ item.package }}"
    state: present
    method: user
  loop: "{{ flatpak_apps_to_install }}"
  loop_control:
    label: "{{ item.package }}"

# Flatpak wrapper scripts

- name: Ensure that {{ lookup('env','HOME') }}/.local/bin directory exists
  ansible.builtin.file:
    path: "{{ lookup('env','HOME') }}/.local/bin"
    state: directory
    mode: "u=rwx,go=rx"

- name: Ensure that Flatpak wrapper scripts are present in {{ lookup('env','HOME') }}/.local/bin
  include_tasks: wrappers.yml
  loop: "{{ flatpak_apps_to_install }}"
  loop_control:
    loop_var: flatpak
    label: "{{ flatpak.package }}"

# Flatpak overrides

- name: Ensure that Flatpak overrides are set up
  include_tasks: overrides.yml
  loop: "{{ flatpak_apps_to_install }}"
  loop_control:
    loop_var: flatpak
    label: "{{ flatpak.package }}"